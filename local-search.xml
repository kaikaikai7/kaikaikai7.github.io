<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>CH2-信息收集技术</title>
    <link href="/2023/09/24/%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E6%8A%80%E6%9C%AF/%E7%90%86%E8%AE%BA%E7%AF%87/02%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%8A%80%E6%9C%AF/"/>
    <url>/2023/09/24/%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E6%8A%80%E6%9C%AF/%E7%90%86%E8%AE%BA%E7%AF%87/02%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E6%8A%80%E6%9C%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="2-1-信息收集概述"><a href="#2-1-信息收集概述" class="headerlink" title="2.1 信息收集概述"></a>2.1 信息收集概述</h1><h2 id="2-1-1-信息收集的内容"><a href="#2-1-1-信息收集的内容" class="headerlink" title="2.1.1 信息收集的内容"></a>2.1.1 信息收集的内容</h2><ul><li>定义：信息收集是指黑客为了更加有效地实施攻击而在攻击前或攻击过程中对目标的所有探测活动</li><li>内容：域名和IP地址；操作系统类型；开放端口；提供开放端口的服务或应用程序；防火墙、入侵检测等安全防范措施</li><li>分类：<ul><li>主动：通过直接访问、扫描网站，这种将流量流经网站的行为</li><li>被动：利用第三方的服务对目标进行访问了解，比例：Google搜索</li></ul></li></ul><h2 id="2-1-2-信息收集的方法"><a href="#2-1-2-信息收集的方法" class="headerlink" title="2.1.2 信息收集的方法"></a>2.1.2 信息收集的方法</h2><ul><li>社会工程学</li><li>技术手段：公开信息收集、网络扫描、漏洞扫描、网络拓扑检测</li></ul><h1 id="2-2-公开信息收集"><a href="#2-2-公开信息收集" class="headerlink" title="2.2 公开信息收集"></a>2.2 公开信息收集</h1><h2 id="2-2-1-利用web服务"><a href="#2-2-1-利用web服务" class="headerlink" title="2.2.1 利用web服务"></a>2.2.1 利用web服务</h2><ul><li><p>网站公开邮箱（结合社会工程学）</p></li><li><p>目标域名、IP地址、网站模板、网络管理员信息、公司人员名单</p></li><li><p>网络拓扑结构图</p></li></ul><h2 id="2-2-2-利用搜索引擎服务"><a href="#2-2-2-利用搜索引擎服务" class="headerlink" title="2.2.2 利用搜索引擎服务"></a>2.2.2 利用搜索引擎服务</h2><ul><li><p>基本语法</p><table><thead><tr><th><strong>And</strong></th><th><strong>与</strong></th></tr></thead><tbody><tr><td><strong>OR</strong></td><td><strong>或</strong></td></tr><tr><td><strong>+</strong></td><td><strong>强制包含搜索项</strong></td></tr><tr><td><strong>-</strong></td><td><strong>非，去掉搜索项</strong></td></tr><tr><td><strong>“”</strong></td><td><strong>包含一个完整的语义</strong></td></tr><tr><td><strong>.</strong></td><td><strong>单个通配符</strong></td></tr><tr><td>*****</td><td><strong>任意通配符</strong></td></tr></tbody></table></li><li><p>搜索语法</p><table><thead><tr><th><strong>site</strong></th><th><strong>搜索具体服务器或域名的网页</strong></th></tr></thead><tbody><tr><td><strong>filetype</strong></td><td><strong>搜索特定类型的文件</strong></td></tr><tr><td><strong>intitle</strong></td><td><strong>搜索网页标题</strong></td></tr><tr><td><strong>inurl</strong></td><td>**搜索URL **</td></tr><tr><td><strong>intext</strong></td><td><strong>搜索正文</strong></td></tr><tr><td><strong>link</strong></td><td><strong>搜索连接到指定网页的网页</strong></td></tr></tbody></table></li><li><p><a href="https://zhuanlan.zhihu.com/p/142832509%EF%BC%88%E8%B0%B7%E6%AD%8C%E9%BB%91%E5%AE%A2%E5%B8%B8%E7%94%A8%E6%90%9C%E7%B4%A2%E8%AF%AD%E5%8F%A5%E4%B8%80%E8%A7%88%EF%BC%89">https://zhuanlan.zhihu.com/p/142832509（谷歌黑客常用搜索语句一览）</a></p></li><li><p>搜索引擎：<a href="https://www.shodan.io/">https://www.shodan.io/</a></p></li></ul><h2 id="2-2-3-利用Whole服务"><a href="#2-2-3-利用Whole服务" class="headerlink" title="2.2.3 利用Whole服务"></a>2.2.3 利用Whole服务</h2><ul><li>功能：查看已注册域名（域名登记人信息、联系电话和邮箱、域名注册时间和更新时间、权威DNS的IP地址）</li><li>使用方法：<a href="https://whois.chinaz.com/">https://whois.chinaz.com/</a></li></ul><h2 id="2-2-4-利用DNS域名服务"><a href="#2-2-4-利用DNS域名服务" class="headerlink" title="2.2.4 利用DNS域名服务"></a>2.2.4 利用DNS域名服务</h2><ul><li>主服务器</li><li>辅助服务器（定期进行区域传送：允许一个辅域名服务器更新自己的区域数据）</li><li>缓存服务器</li></ul><p><strong>利用思路</strong>：</p><p>如果DNS配置不当，可能造成内部主机名和IP地址对的泄漏。即主DNS服务器允许任意IP地址从该服务器进行区域传送，进而泄露信息。</p><h2 id="2-2-5-CDN"><a href="#2-2-5-CDN" class="headerlink" title="2.2.5 CDN"></a>2.2.5 CDN</h2><p>内容分发网络<code>CDN</code>是一个互连服务器网络，可加快数据密集型应用程序的网页加载速度。<code>CDN </code>可以表示内容分发网络或内容分配网络。当用户访问某个网站时，来自该网站服务器的数据必须通过互联网传输到用户的计算机。如果用户距离该服务器较远，则加载大文件（例如视频或网站图像）将需要很长时间。相反，如果网站内容存储在距离用户较近的 <code>CDN </code>服务器上，就可以更快到达他们的计算机。</p><h1 id="2-3-网络扫描"><a href="#2-3-网络扫描" class="headerlink" title="2.3 网络扫描"></a>2.3 网络扫描</h1><h2 id="2-3-1-主机扫描"><a href="#2-3-1-主机扫描" class="headerlink" title="2.3.1 主机扫描"></a>2.3.1 主机扫描</h2><h3 id="2-3-1-1-ICMP扫描"><a href="#2-3-1-1-ICMP扫描" class="headerlink" title="2.3.1.1 ICMP扫描"></a>2.3.1.1 ICMP扫描</h3><p><strong>ping扫描原理</strong>：</p><p>利用<code>ICMP协议</code>（响应请求&#x2F;应答）进行工作</p><p><strong><code>ICMP</code>报文格式：</strong></p><p><img src="https://raw.githubusercontent.com/kaikaikai7/BlogImage/main/img/202309241014073.png" alt="image-20230920161113121"></p><p>类型域指明类型；代码域指明作用</p><p><strong>常见<code>ICMP</code>报文：</strong></p><table><thead><tr><th><strong>名称</strong></th><th><strong>类型</strong></th></tr></thead><tbody><tr><td><strong><code>ICMP</code>  Destination Unreachable（目标不可达）</strong></td><td><strong>3</strong></td></tr><tr><td><strong><code>ICMP</code>  Source Quench</strong> <strong>（源抑制）</strong></td><td><strong>4</strong></td></tr><tr><td><strong><code>ICMP</code>  Redirection（重定向）</strong></td><td><strong>5</strong></td></tr><tr><td><strong><code>ICMP</code>  Timestamp Request&#x2F;Reply（时间戳）</strong></td><td><strong>13&#x2F;14</strong></td></tr><tr><td><strong><code>ICMP</code>  Address Mask Request&#x2F;Reply（子网掩码）</strong></td><td><strong>17&#x2F;18</strong></td></tr><tr><td><strong><code>ICMP</code>  Echo Request&#x2F;Reply（响应请求&#x2F;应答）</strong></td><td><strong>8&#x2F;0</strong></td></tr></tbody></table><p>注：根据RFC的定义，<code>TCP/IP</code>协议栈应该支持各种类型的<code>ICMP</code>报文。但事实上，在各个操作系统具体实现TCP&#x2F;IP时，可能并没有完全遵循RFC标准。</p><h3 id="2-3-1-2-其他类型的主机扫描"><a href="#2-3-1-2-其他类型的主机扫描" class="headerlink" title="2.3.1.2 其他类型的主机扫描"></a>2.3.1.2 其他类型的主机扫描</h3><ul><li>构造异常的<code>IP</code>包头</li><li>在<code>IP</code>头中设置无效的字段值</li><li>构造错误的数据分片</li><li>通过超长包探测内部路由器</li><li>反向映射探测</li></ul><h2 id="2-3-2-端口扫描"><a href="#2-3-2-端口扫描" class="headerlink" title="2.3.2 端口扫描"></a>2.3.2 端口扫描</h2><p>参阅：<a href="https://nmap.org/man/zh/man-port-scanning-techniques.html">https://nmap.org/man/zh/man-port-scanning-techniques.html</a></p><h3 id="2-3-2-1-Connect扫描"><a href="#2-3-2-1-Connect扫描" class="headerlink" title="2.3.2.1 Connect扫描"></a>2.3.2.1 Connect扫描</h3><p><img src="https://raw.githubusercontent.com/kaikaikai7/BlogImage/main/img/202309241014075.png" alt="image-20230920162546395"></p><ul><li>即TCP Connect扫描。左边为服务端，右边为客户端。</li><li>优点：实现简单、可以用普通用户权限执行</li><li>缺点：容易被目标应用日志所记录</li></ul><h3 id="2-3-2-2-SYN扫描和FIN扫描"><a href="#2-3-2-2-SYN扫描和FIN扫描" class="headerlink" title="2.3.2.2 SYN扫描和FIN扫描"></a>2.3.2.2 SYN扫描和FIN扫描</h3><p><strong>SYN扫描</strong></p><p><img src="https://raw.githubusercontent.com/kaikaikai7/BlogImage/main/img/202309241014076.png" alt="image-20230920163233117"></p><ul><li>半连接扫描基于TCP三次握手规则，探测服务端口是否开放。</li><li>服务端口开放，会返回<code>SYN/ACK </code>消息</li><li>服务端口关闭，会返回<code>RST</code>消息</li><li>如果数次重发后仍没响应，该端口就被标记为被过滤。如果收到<code>ICMP</code>不可到达错误 (类型3，代码1，2，3，9，10，或者13)，该端口也被标记为被过滤。</li><li>优点：一般不会被目标主机的应用所记录</li><li>缺点：运行Raw Socket时必须拥有管理员权限</li></ul><p><strong>FIN扫描</strong></p><ul><li>假设扫描系统遵循RFC标准，如果收到一个<code>RST</code>报文，该端口被认为是 closed(关闭的)</li><li>没有响应则意味着端口是open|filtered(开放或者被过滤的)</li><li>如果收到<code>ICMP</code>不可到达错误(类型 3，代号 1，2，3，9，10，或者13)，该端口就被标记为被过滤的。</li><li>优点：它们能躲过一些无状态防火墙和报文过滤路由器，不会被记录到日志</li><li>缺点：大部分系统并不遵循该标准</li><li>FIN扫描 (-sF)：只设置<code>TCP FIN</code>标志位。</li><li>Null扫描 (-sN)：不设置任何标志位(tcp标志头是0)</li><li>Xmas扫描 (-sX)：设置<code>FIN</code>，<code>PSH</code>，和<code>URG</code>标志位</li><li>除了探测报文的标志位不同，这三种扫描在行为上完全一致。</li></ul><h3 id="2-3-2-3-其他端口扫描技术"><a href="#2-3-2-3-其他端口扫描技术" class="headerlink" title="2.3.2.3 其他端口扫描技术"></a>2.3.2.3 其他端口扫描技术</h3><ul><li><code>ACK</code>扫描：向目标主机的端口发送<code>ACK</code>包，如果收到<code>RST</code>包，说明该端口没有被防火墙屏蔽；不响应的端口或者发送特定的<code>ICMP</code>错误消息(类型3，代号1，2，3，9，10， 或者13)的端口，标记为 filtered(被过滤的)。</li><li><code>IP</code>分段扫描</li><li>TCP FTP Proxy扫描</li></ul><h3 id="2-3-2-4-UDP扫描"><a href="#2-3-2-4-UDP扫描" class="headerlink" title="2.3.2.4 UDP扫描"></a>2.3.2.4 UDP扫描</h3><p>只需向目标主机<code>UDP</code>端口发送任意数据，如果端口没有开放，则返回一个“目标不可达”的<code>ICMP</code>报文</p><h2 id="2-3-3-系统类型扫描"><a href="#2-3-3-系统类型扫描" class="headerlink" title="2.3.3 系统类型扫描"></a>2.3.3 系统类型扫描</h2><h3 id="2-3-3-1-利用端口扫描结果"><a href="#2-3-3-1-利用端口扫描结果" class="headerlink" title="2.3.3.1 利用端口扫描结果"></a>2.3.3.1 利用端口扫描结果</h3><ul><li>由于现代操作系统往往提供一些自身特有的功能，而这些功能又很可能打开一些特定的端口</li><li>windows：135，137，139等</li><li>Lniux：512，513，514，2049等</li></ul><h3 id="2-3-3-2-利用Banner"><a href="#2-3-3-2-利用Banner" class="headerlink" title="2.3.3.2 利用Banner"></a>2.3.3.2 利用Banner</h3><p>服务程序接收到客户端的正常连接后所给出的欢迎信息</p><h3 id="2-3-3-3-TCP-IP协议栈指纹"><a href="#2-3-3-3-TCP-IP协议栈指纹" class="headerlink" title="2.3.3.3 TCP&#x2F;IP协议栈指纹"></a>2.3.3.3 TCP&#x2F;IP协议栈指纹</h3><ul><li>不同的操作系统在实现<code>TCP/IP</code>协议栈时都或多或少地存在着差异。而这些差异，我们就称之为<code>TCP/IP</code>协议栈指纹</li><li>TCP指纹：<code>FIN</code>探测、<code>BOGUS</code>标记位探测、<code>SYN</code>泛洪测试等</li><li><code>IP</code>、<code>ICMP</code>指纹：<code>ICMP</code>错误信息查询、<code>ICMP</code>信息引用、<code>TOS</code>和<code>TTL</code></li></ul><h1 id="2-4-漏洞扫描"><a href="#2-4-漏洞扫描" class="headerlink" title="2.4 漏洞扫描"></a>2.4 漏洞扫描</h1><h2 id="2-4-1-概念"><a href="#2-4-1-概念" class="headerlink" title="2.4.1 概念"></a>2.4.1 概念</h2><ul><li><p>漏洞：在计算机安全领域，安全漏洞<code>SecurityHole</code>通常又称作脆弱性（vulnerability）</p></li><li><p>来源：</p><p>（1）硬件、软件或协议设计时的瑕疵<br>（2）硬件、软件或协议实现中的弱点<br>（3）硬件、软件本身的瑕疵<br>（4）系统和网络的错误配置</p></li><li><p>漏洞扫描：指利用一些专门或综合漏洞扫描程序对目标存在的系统漏洞或应用程序漏洞进行扫描。</p></li></ul><h2 id="2-4-2-分类"><a href="#2-4-2-分类" class="headerlink" title="2.4.2 分类"></a>2.4.2 分类</h2><ul><li>主动式策略是<strong>基于网络</strong>的检测，通过执行一些脚本文件对系统进行攻击，并记录它的反应，从而发现其中的漏洞</li><li>被动式策略是<strong>基于主机</strong>的检测，对系统中不合适的设置、脆弱的口令以及其他同安全规则相抵触的对象进行检查</li></ul><h2 id="2-4-3-方法"><a href="#2-4-3-方法" class="headerlink" title="2.4.3 方法"></a>2.4.3 方法</h2><ul><li>直接测试：指利用漏洞特点发现系统漏洞的方法</li><li>推断：它并不直接渗透漏洞，只是间接地寻找漏洞存在的证据。采用推断方法的检测手段主要有版本检查、程序行为分析、操作系统堆栈指纹分析和时序分析等。</li><li>带凭证的测试 ：凭证是指访问服务所需要的用户名或者密码，包括UNIX的登录权限和从网络调用Windows NT的<code>API</code>的能力。如果赋予测试进程目标系统的角色，将能够检查出更多的漏洞。</li></ul><h1 id="2-5-网络拓扑探测"><a href="#2-5-网络拓扑探测" class="headerlink" title="2.5 网络拓扑探测"></a>2.5 网络拓扑探测</h1><h2 id="2-5-1-拓扑探测"><a href="#2-5-1-拓扑探测" class="headerlink" title="2.5.1 拓扑探测"></a>2.5.1 拓扑探测</h2><ul><li><code>Traceroute</code>：<code>UDP</code>数据包、<code>TTL</code></li><li><code>SNMP</code>（简单网络管理协议）：不同类型网络设备之间客户机&#x2F;服务器模式的简单通信协议<ul><li>Read：观察设备配置信息</li><li>Read&#x2F;Write：有权写入信息</li></ul></li></ul><h2 id="2-5-2-网络设备识别"><a href="#2-5-2-网络设备识别" class="headerlink" title="2.5.2 网络设备识别"></a>2.5.2 网络设备识别</h2><h3 id="2-5-2-1-利用专门搜索引擎"><a href="#2-5-2-1-利用专门搜索引擎" class="headerlink" title="2.5.2.1 利用专门搜索引擎"></a>2.5.2.1 利用专门搜索引擎</h3><p><a href="https://www.shodan.io/">https://www.shodan.io/</a></p><p><a href="https://www.zoomeye.org/">https://www.zoomeye.org/</a></p><h3 id="2-5-2-2-基于设备指纹的设备类型探测"><a href="#2-5-2-2-基于设备指纹的设备类型探测" class="headerlink" title="2.5.2.2 基于设备指纹的设备类型探测"></a>2.5.2.2 基于设备指纹的设备类型探测</h3><p>主要介绍基于应用服务Banner的设备识别技术：</p><ul><li>FTP协议</li><li>SSH</li><li>Telnet</li><li>HTTP</li></ul><h3 id="2-5-2-3-网络实体IP地理位置定位"><a href="#2-5-2-3-网络实体IP地理位置定位" class="headerlink" title="2.5.2.3 网络实体IP地理位置定位"></a>2.5.2.3 网络实体IP地理位置定位</h3><ul><li>基于查询信息的定位：通过查询机构注册的信息确定网络设备的地理位置</li><li>基于网络测量的定位：利用探测源与目标实体的时延、拓扑或其他信息估计目标实体的位置</li></ul>]]></content>
    
    
    <categories>
      
      <category>网络攻防技术</category>
      
      <category>理论篇</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>CH1-网络攻击概述</title>
    <link href="/2023/09/24/%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E6%8A%80%E6%9C%AF/%E7%90%86%E8%AE%BA%E7%AF%87/01%E7%BD%91%E7%BB%9C%E6%94%BB%E5%87%BB%E6%A6%82%E8%BF%B0/"/>
    <url>/2023/09/24/%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E6%8A%80%E6%9C%AF/%E7%90%86%E8%AE%BA%E7%AF%87/01%E7%BD%91%E7%BB%9C%E6%94%BB%E5%87%BB%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="1-1-网络安全威胁"><a href="#1-1-网络安全威胁" class="headerlink" title="1.1 网络安全威胁"></a>1.1 网络安全威胁</h1><h2 id="1-1-1-事件"><a href="#1-1-1-事件" class="headerlink" title="1.1.1 事件"></a>1.1.1 事件</h2><h2 id="1-1-2-成因"><a href="#1-1-2-成因" class="headerlink" title="1.1.2 成因"></a>1.1.2 成因</h2><ul><li><p>技术因素</p><ul><li>协议缺陷：网络协议缺乏认证、加密等基本的安全特性</li><li>软件漏洞：软件规模庞大，复杂度提高，开发者安全知识缺乏</li><li>策略弱点：安全需求与应用需求不相一致，安全策略设计不当</li><li>硬件漏洞：硬件设计软件化使得软件漏洞同样出现在硬件之中</li></ul></li><li><p>人为因素</p><ul><li>攻击者：成分复杂，多数掌握着丰富的攻击资源</li><li>防御者：广大的网络应用人群缺少安全知识，专业人员数量、质量尚难满足对安全人才的迫切需求</li></ul></li></ul><h1 id="1-2-网络攻击技术"><a href="#1-2-网络攻击技术" class="headerlink" title="1.2 网络攻击技术"></a>1.2 网络攻击技术</h1><h2 id="1-2-1-分类"><a href="#1-2-1-分类" class="headerlink" title="1.2.1 分类"></a>1.2.1 分类</h2><ul><li>本地（物理）攻击：指攻击者通过实际接触被攻击的主机实施的各种攻击方法</li><li>主动攻击：指攻击者利用Web、FTP、Telnet等开放网络服务对目标实施的各种攻击</li><li>被动攻击：攻击者利用浏览器、邮件接收程序、文字处理程序等客户端应用程序漏洞或系统用户弱点，对目标实施的各种攻击</li><li>中间人攻击：指攻击者处于被攻击主机的某个网络应用的中间人位置，进行数据窃听、破坏或篡改等攻击</li></ul><p>注：主动与被动，主要是看是否需要对方采取动作</p><h2 id="1-2-2-步骤与方法"><a href="#1-2-2-步骤与方法" class="headerlink" title="1.2.2 步骤与方法"></a>1.2.2 步骤与方法</h2><ul><li>信息收集</li><li>权限获取</li><li>安装后门</li><li>扩大影响</li><li>清除痕迹</li></ul><h1 id="1-3-网络攻击的发展趋势"><a href="#1-3-网络攻击的发展趋势" class="headerlink" title="1.3 网络攻击的发展趋势"></a>1.3 网络攻击的发展趋势</h1><ul><li>攻击影响日益深远</li><li>攻击领域不断扩展</li><li>攻击技术愈加精细</li></ul>]]></content>
    
    
    <categories>
      
      <category>网络攻防技术</category>
      
      <category>理论篇</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>GitHub+PicGo搭建免费图床</title>
    <link href="/2023/09/23/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/GitHub+PicGo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A/"/>
    <url>/2023/09/23/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/GitHub+PicGo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A/</url>
    
    <content type="html"><![CDATA[<h1 id="1-操作步骤"><a href="#1-操作步骤" class="headerlink" title="1. 操作步骤"></a>1. 操作步骤</h1><h2 id="1-1-Github"><a href="#1-1-Github" class="headerlink" title="1.1 Github"></a>1.1 Github</h2><ul><li><p>新建仓库（注：必须为Public，勾选<code>Add a README file</code>）</p><p><img src="https://raw.githubusercontent.com/kaikaikai7/BlogImage/main/img/202309231654111.png" alt="image-20230923153333076"></p></li><li><p>生成token：点击<code>Github</code>右上角的用户头→<code>Settings</code>→<code>Developer settiings</code>→<code>Personal access tokens</code>→<code>Tokens(classic)</code>→<code>Generate new token</code>，在<code>Note</code>一栏输入创建的仓库名称，并勾选<code>repo</code>，最后在最下方点击<code>Generate token</code>按钮，就生成了对应的<code>Token</code>。注：新生成的 <code>Token </code>只会显示一次，请妥善保存，如有遗失，重新生成即可。</p><p><img src="https://raw.githubusercontent.com/kaikaikai7/BlogImage/main/img/202309231654112.png" alt="image-20230923154939730"></p></li></ul><h2 id="1-2-PicGo"><a href="#1-2-PicGo" class="headerlink" title="1.2 PicGo"></a>1.2 PicGo</h2><ul><li><p>下载PicGo所需版本</p><p><img src="https://raw.githubusercontent.com/kaikaikai7/BlogImage/main/img/202309231654113.png" alt="image-20230923155129734"></p><p><img src="https://raw.githubusercontent.com/kaikaikai7/BlogImage/main/img/202309231654114.png" alt="image-20230923155430395"></p></li><li><p>安装（略）</p><p><img src="https://raw.githubusercontent.com/kaikaikai7/BlogImage/main/img/202309231654115.png" alt="image-20230923155604890"></p></li><li><p>配置</p><ul><li><p>为显示简捷，仅勾选GitHub</p><p><img src="https://raw.githubusercontent.com/kaikaikai7/BlogImage/main/img/202309231654116.png" alt="image-20230923155808379"></p></li><li><p><strong>特别注意</strong>：设定仓库名为账户+仓库名；自定义域名需要自己有域名才填写</p><p><img src="https://raw.githubusercontent.com/kaikaikai7/BlogImage/main/img/202309231654117.png" alt="image-20230923165104951"></p></li><li><p>点击<code>设为默认图床</code>，点击<code>确定</code></p></li></ul></li></ul><h2 id="1-3-Typora"><a href="#1-3-Typora" class="headerlink" title="1.3 Typora"></a>1.3 Typora</h2><p><code>文件</code>→<code>偏好设置</code>→<code>图像</code></p><p><img src="https://raw.githubusercontent.com/kaikaikai7/BlogImage/main/img/202309231654118.png" alt="image-20230923163344947"></p><h1 id="2-使用方法"><a href="#2-使用方法" class="headerlink" title="2. 使用方法"></a>2. 使用方法</h1><p>Typora：<code>格式</code>→<code>图像</code>→<code>上传所有本地图片</code></p><p>参考教程：</p><ol><li><a href="https://cnhuazhu.top/butterfly/2021/02/20/GitHub+PicGo+jsDelivr%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A/">GitHub+PicGo+jsDelivr搭建免费图床 | 花猪のBlog (cnhuazhu.top)</a></li><li><a href="https://juejin.cn/post/6992451980379553828">https://juejin.cn/post/6992451980379553828</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>博客搭建</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Fluid主题配置指南</title>
    <link href="/2023/09/23/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/Fluid%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/"/>
    <url>/2023/09/23/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/Fluid%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h1 id="1-关于指南"><a href="#1-关于指南" class="headerlink" title="1. 关于指南"></a>1. 关于指南</h1><ul><li>本指南中提到的：”<strong>站点配置</strong>“ 指的 Hexo 博客目录下的 <code>_config.yml</code>，”<strong>主题配置</strong>“ 指的是 <code>theme/fluid/_config.yml</code> 或者 <code>_config.fluid.yml</code> ，注意区分；</li><li>本指南中提到的 <code>source</code> 目录都指的是博客目录下的 <code>source</code> 文件夹，不推荐修改主题内 <code>source</code> 目录；</li></ul><h1 id="2-全局"><a href="#2-全局" class="headerlink" title="2. 全局"></a>2. 全局</h1><h2 id="2-1-覆盖配置"><a href="#2-1-覆盖配置" class="headerlink" title="2.1 覆盖配置"></a>2.1 覆盖配置</h2><ul><li><p>在博客根目录下创建 <code>_config.fluid.yml</code> 文件，将主题的 <code>_config.yml</code>（不是根目录下的 <code>_config.yml</code>）全部配置复制过去，以后如果修改任何主题配置，都只需修改 <code>_config.fluid.yml</code> 的配置即可；</p></li><li><p>只要存在于 <code>_config.fluid.yml</code> 的配置都是高优先级，修改原 <code>_config.yml</code> 是无效的;</p></li><li><p>每次更新主题可能存在配置变更，请注意更新说明，可能需要手动对 <code>_config.fluid.yml</code> 同步修改;</p></li><li><p>想查看覆盖配置有没有生效，可以通过 <code>hexo g --debug</code> 查看命令行输出;</p></li><li><p>如果想将某些配置覆盖为空，注意不要把主键删掉，不然是无法覆盖的，比如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">about:</span><br>  <span class="hljs-attr">icons:</span>  <span class="hljs-comment"># 不要把 icon 注释掉，否则无法覆盖配置</span><br>    <span class="hljs-comment"># - &#123; class: &#x27;iconfont icon-github-fill&#x27;, link: &#x27;https://github.com&#x27; &#125;</span><br>    <span class="hljs-comment"># - &#123; class: &#x27;iconfont icon-wechat-fill&#x27;, qrcode: &#x27;/img/favicon.png&#x27; &#125;</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="2-2-博客标题"><a href="#2-2-博客标题" class="headerlink" title="2.2 博客标题"></a>2.2 博客标题</h2><p>页面左上角的博客标题，默认使用<strong>站点配置</strong>中的 <code>title</code>，这个配置同时控制着网页在浏览器标签中的标题。如需单独区别设置，可在<strong>主题配置</strong>中设置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 导航栏的相关配置</span><br><span class="hljs-comment"># Navigation bar</span><br><span class="hljs-attr">navbar:</span><br>  <span class="hljs-comment"># 导航栏左侧的标题，为空则按 hexo config 中 `title` 显示</span><br>  <span class="hljs-comment"># The title on the left side of the navigation bar. If empty, it is based on `title` in hexo config</span><br>  <span class="hljs-attr">blog_title:</span> <span class="hljs-string">&quot;kaikaikai&#x27;s blog&quot;</span><br></code></pre></td></tr></table></figure><h2 id="2-3-导航菜单"><a href="#2-3-导航菜单" class="headerlink" title="2.3 导航菜单"></a>2.3 导航菜单</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 导航栏菜单，可自行增减，key 用来关联 languages/*.yml，如不存在关联则显示 key 本身的值；icon 是 css class，可以省略；增加 name 可以强制显示指定名称</span><br> <span class="hljs-comment"># Navigation bar menu. `key` is used to associate languages/*.yml. If there is no association, the value of `key` itself will be displayed; if `icon` is a css class, it can be omitted; adding `name` can force the display of the specified name</span><br> <span class="hljs-attr">menu:</span><br>   <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;home&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-home-fill&quot;</span> &#125;<br>   <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;archive&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/archives/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-archive-fill&quot;</span> &#125;<br>   <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;category&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/categories/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-category-fill&quot;</span> &#125;<br>   <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;tag&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/tags/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-tags-fill&quot;</span> &#125;<br>   <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;about&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/about/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-user-fill&quot;</span> &#125;<br>   <span class="hljs-comment">#- &#123; key: &quot;links&quot;, link: &quot;/links/&quot;, icon: &quot;iconfont icon-link-fill&quot; &#125;</span><br></code></pre></td></tr></table></figure><h2 id="2-4-展示PV与UV统计"><a href="#2-4-展示PV与UV统计" class="headerlink" title="2.4 展示PV与UV统计"></a>2.4 展示PV与UV统计</h2><p>页脚可以展示 PV 与 UV 统计数据，目前支持两种数据来源：<a href="https://www.leancloud.cn/">LeanCloud </a>与 <a href="http://busuanzi.ibruce.info/">不蒜子 </a>。</p><p>相关<strong>主题配置</strong>如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">footer:</span><br>  <span class="hljs-attr">statistics:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">source:</span> <span class="hljs-string">&quot;busuanzi&quot;</span>  <span class="hljs-comment"># 可选 leancloud | busuanzi  根据自己需求选择</span><br>    <span class="hljs-attr">pv_format:</span> <span class="hljs-string">&quot;总访问量 &#123;&#125; 次&quot;</span>  <span class="hljs-comment"># 显示的文本，&#123;&#125;是数字的占位符（必须包含)，下同</span><br>    <span class="hljs-attr">uv_format:</span> <span class="hljs-string">&quot;总访客数 &#123;&#125; 人&quot;</span><br></code></pre></td></tr></table></figure><h2 id="2-5-语言配置"><a href="#2-5-语言配置" class="headerlink" title="2.5 语言配置"></a>2.5 语言配置</h2><p>不同语言会影响一些主题自带的文字。设置语言是在<strong>站点配置</strong>中，需要对应 <code>fluid/languages/</code> 目录内的配置文件名:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span><br></code></pre></td></tr></table></figure><h1 id="3-首页"><a href="#3-首页" class="headerlink" title="3. 首页"></a>3. 首页</h1><h2 id="3-1-文章摘要"><a href="#3-1-文章摘要" class="headerlink" title="3.1 文章摘要"></a>3.1 文章摘要</h2><p>开关自动摘要（默认开启）：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">index:</span><br>  <span class="hljs-attr">auto_excerpt:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>若要手动指定摘要，使用 <code>&lt;!-- more --&gt;</code> MD文档里划分，如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs markdown">正文的一部分作为摘要<br>&lt;!-- more --&gt;<br>余下的正文<br></code></pre></td></tr></table></figure><p>或者在 <a href="https://hexo.io/zh-cn/docs/front-matter">front-matter</a>里设置 <code>excerpt</code> 字段，如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">这是标题</span><br><span class="hljs-attr">excerpt:</span> <span class="hljs-string">这是摘要</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><p>TIP</p><ul><li><p>优先级: 手动摘要 &gt; 自动摘要</p></li><li><p>如果关闭自动摘要，并且没有设置手动摘要，摘要区域空白</p></li><li><p>无论哪种摘要都最多显示 3 行，当屏幕宽度不足时会隐藏部分摘要。</p></li></ul><h2 id="3-2-文章跳转方式"><a href="#3-2-文章跳转方式" class="headerlink" title="3.2 文章跳转方式"></a>3.2 文章跳转方式</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 打开文章的标签方式</span><br>  <span class="hljs-comment"># The browser tag to open the post</span><br>  <span class="hljs-comment"># Available: _blank | _self</span><br>  <span class="hljs-attr">post_url_target:</span> <span class="hljs-string">_self</span><br></code></pre></td></tr></table></figure><h2 id="3-3-文章信息"><a href="#3-3-文章信息" class="headerlink" title="3.3 文章信息"></a>3.3 文章信息</h2><p>可配置隐藏包括发布时间、分类、标签。经过测试，如果首页的文章列表中没有略缩图和摘要，标题+文章信息的显示方式会使页面过于拥挤，所以给出此项配置供喜欢首页只显示文章标题的同学使用。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">index:</span><br>  <span class="hljs-attr">post_meta:</span><br>    <span class="hljs-attr">date:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">category:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">tag:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h2 id="3-4-隐藏文章"><a href="#3-4-隐藏文章" class="headerlink" title="3.4 隐藏文章"></a>3.4 隐藏文章</h2><p>如果想把某些文章隐藏，<strong>不在首页和其他归档分类页里展示</strong>，可以在文章开头 <a href="https://hexo.io/zh-cn/docs/front-matter">front-matter </a>中配置 <code>hide: true</code> 属性。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-attr">hide:</span> <span class="hljs-literal">true</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是文章内容</span><br></code></pre></td></tr></table></figure><p>隐藏后依然可以通过文章链接访问，所以可以用于一些需要链接跳转的特殊文章。</p><h2 id="3-5-归档文章"><a href="#3-5-归档文章" class="headerlink" title="3.5 归档文章"></a>3.5 归档文章</h2><p>如果只是想让文章在首页隐藏，但仍<strong>需要在归档分类页里展示</strong>，可以在文章开头 <a href="https://hexo.io/zh-cn/docs/front-matter">front-matter</a>中配置 <code>archive: true</code> 属性。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-attr">archive:</span> <span class="hljs-literal">true</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是文章内容</span><br></code></pre></td></tr></table></figure><h2 id="3-6-文章排序"><a href="#3-6-文章排序" class="headerlink" title="3.6 文章排序"></a>3.6 文章排序</h2><p>如果想手动将某些文章固定在首页靠前的位置，可以在安装 <code>hexo-generator-index</code> &gt;&#x3D; 2.0.0 版本的情况下，在文章开头 <a href="https://hexo.io/zh-cn/docs/front-matter">front-matter </a>中配置 <code>sticky</code> 属性：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-attr">sticky:</span> <span class="hljs-number">100</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是文章内容</span><br></code></pre></td></tr></table></figure><p><code>sticky</code> 数值越大，该文章越靠前，达到类似于置顶的效果，其他未设置的文章依然按默认排序。</p><p>当文章设置了 <code>sticky</code> 后，主题会默认在首页文章标题前增加一个图标，来标识这是一个置顶文章，你可以通过<strong>主题配置</strong>去关闭或修改这个功能：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">index:</span><br>  <span class="hljs-attr">post_sticky:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;iconfont icon-top&#x27;</span><br></code></pre></td></tr></table></figure><p><code>icon</code> 可以通过<a href="https://fluid-dev.github.io/hexo-fluid-docs/icon/">自定义图标</a>修改为其他图标。</p><h1 id="4-文章页"><a href="#4-文章页" class="headerlink" title="4. 文章页"></a>4. 文章页</h1><h2 id="4-1-文章封面图"><a href="#4-1-文章封面图" class="headerlink" title="4.1 文章封面图"></a>4.1 文章封面图</h2><p>对于单篇文章，在文章开头 <a href="https://hexo.io/zh-cn/docs/front-matter">front-matter </a>中配置 <code>index_img</code> 属性。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">tags:</span> [<span class="hljs-string">Hexo</span>, <span class="hljs-string">Fluid</span>]<br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是文章内容</span><br></code></pre></td></tr></table></figure><p>和 Banner 配置相同，<code>/img/example.jpg</code> 对应的是存放在 <code>/source/img/example.jpg</code> 目录下的图片（目录也可自定义，但必须在 source 目录下）。</p><p>也可以使用外链 Url 的绝对路径。</p><p>如果想统一给文章设置一个默认图片（文章不设置 <code>index_img</code> 则默认使用这张图片），可在<strong>主题配置</strong>中设置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">default_index_img:</span> <span class="hljs-string">/img/example.jpg</span><br></code></pre></td></tr></table></figure><p>当 <code>default_index_img</code> 和 <code>index_img</code> 都为空时，该文章在首页将不显示图片。</p><h2 id="4-2-文章内容图片"><a href="#4-2-文章内容图片" class="headerlink" title="4.2 文章内容图片"></a>4.2 文章内容图片</h2><p>本地图片存放位置同上。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs markdown">![](<span class="hljs-link">/img/example.jpg</span>)<br></code></pre></td></tr></table></figure><h2 id="4-3-代码块"><a href="#4-3-代码块" class="headerlink" title="4.3 代码块"></a>4.3 代码块</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">code:</span><br>  <span class="hljs-attr">copy_btn:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">highlight:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">line_number:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">lib:</span> <span class="hljs-string">&quot;highlightjs&quot;</span><br>    <span class="hljs-attr">highlightjs:</span><br>      <span class="hljs-attr">style:</span> <span class="hljs-string">&#x27;Github Gist&#x27;</span><br>      <span class="hljs-attr">bg_color:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">prismjs:</span><br>      <span class="hljs-attr">style:</span> <span class="hljs-string">&quot;default&quot;</span><br>      <span class="hljs-attr">preprocess:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p><code>copy_btn</code>: 是否开启复制代码的按钮</p><p><code>line_number</code>: 是否开启行号</p><p><code>highlight</code>: 是否开启代码高亮</p><p><code>lib</code>: 选择生成高亮的库，可选项: <code>highlightjs</code>、<code>prismjs</code>，对应下面两组配置，高亮的配置说明具体见<strong>主题配置</strong>中的注释</p><h1 id="5-Front-matter"><a href="#5-Front-matter" class="headerlink" title="5. Front-matter"></a>5. Front-matter</h1><p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Hello</span> <span class="hljs-string">World</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2013</span><span class="hljs-string">/7/13</span> <span class="hljs-number">20</span><span class="hljs-string">:46:25</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><p>以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>layout</code></td><td align="left">布局</td><td align="left"><a href="https://hexo.io/zh-cn/docs/configuration#%E6%96%87%E7%AB%A0"><code>config.default_layout</code></a></td></tr><tr><td align="left"><code>title</code></td><td align="left">标题</td><td align="left">文章的文件名</td></tr><tr><td align="left"><code>date</code></td><td align="left">建立日期</td><td align="left">文件建立日期</td></tr><tr><td align="left"><code>updated</code></td><td align="left">更新日期</td><td align="left">文件更新日期</td></tr><tr><td align="left"><code>comments</code></td><td align="left">开启文章的评论功能</td><td align="left"><code>true</code></td></tr><tr><td align="left"><code>tags</code></td><td align="left">标签（不适用于分页）</td><td align="left"></td></tr><tr><td align="left"><code>categories</code></td><td align="left">分类（不适用于分页）</td><td align="left"></td></tr><tr><td align="left"><code>permalink</code></td><td align="left">覆盖文章的永久链接，永久链接应该以 <code>/</code> 或 <code>.html</code> 结尾</td><td align="left"><code>null</code></td></tr><tr><td align="left"><code>excerpt</code></td><td align="left">纯文本的页面摘要。使用 <a href="https://hexo.io/zh-cn/docs/tag-plugins#%E6%96%87%E7%AB%A0%E6%91%98%E8%A6%81%E5%92%8C%E6%88%AA%E6%96%AD">该插件</a> 来格式化文本</td><td align="left"></td></tr><tr><td align="left"><code>disableNunjucks</code></td><td align="left">启用时禁用 Nunjucks 标签 <code>&#123;&#123; &#125;&#125;</code>&#x2F;<code>&#123;% %&#125;</code> 和 <a href="https://hexo.io/zh-cn/docs/tag-plugins">标签插件</a> 的渲染功能</td><td align="left">false</td></tr><tr><td align="left"><code>lang</code></td><td align="left">设置语言以覆盖 <a href="https://hexo.io/zh-cn/docs/internationalization#%E8%B7%AF%E5%BE%84">自动检测</a></td><td align="left">继承自 <code>_config.yml</code></td></tr><tr><td align="left"><code>published</code></td><td align="left">文章是否发布</td><td align="left">对于 <code>_posts</code> 下的文章为 <code>true</code>，对于 <code>_draft</code> 下的文章为 <code>false</code></td></tr></tbody></table><h1 id="6-关于页"><a href="#6-关于页" class="headerlink" title="6. 关于页"></a>6. 关于页</h1><h2 id="6-1-创建关于页"><a href="#6-1-创建关于页" class="headerlink" title="6.1 创建关于页"></a>6.1 创建关于页</h2><p>首次使用主题的「关于页」需要手动创建：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new page about<br></code></pre></td></tr></table></figure><p>创建成功后修改 <code>/source/about/index.md</code>，添加 <code>layout</code> 属性。</p><p>修改后的文件示例如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">标题</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这里可以写正文，支持</span> <span class="hljs-string">Markdown,</span> <span class="hljs-string">HTML</span><br></code></pre></td></tr></table></figure><p>WARNING：<code>layout: about</code> 必须存在，并且不能修改成其他值，否则不会显示头像等样式。</p><h2 id="6-2-关于信息"><a href="#6-2-关于信息" class="headerlink" title="6.2 关于信息"></a>6.2 关于信息</h2><p>在关于页介绍自己的基础信息，可以在<strong>主题配置</strong>中设置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">about:</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">/img/avatar.png</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;Fluid&quot;</span><br>  <span class="hljs-attr">intro:</span> <span class="hljs-string">&quot;An elegant theme for Hexo&quot;</span><br></code></pre></td></tr></table></figure><h2 id="6-3-社交页图标"><a href="#6-3-社交页图标" class="headerlink" title="6.3 社交页图标"></a>6.3 社交页图标</h2><p>在<strong>主题配置</strong>中设置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">about:</span><br>  <span class="hljs-attr">icons:</span><br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">class:</span> <span class="hljs-string">&#x27;iconfont icon-github-fill&#x27;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&#x27;https://github.com&#x27;</span>, <span class="hljs-attr">tip:</span> <span class="hljs-string">&#x27;GitHub&#x27;</span> &#125;<br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">class:</span> <span class="hljs-string">&#x27;iconfont icon-douban-fill&#x27;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&#x27;https://douban.com&#x27;</span>, <span class="hljs-attr">tip:</span> <span class="hljs-string">&#x27;豆瓣&#x27;</span> &#125;<br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">class:</span> <span class="hljs-string">&#x27;iconfont icon-wechat-fill&#x27;</span>, <span class="hljs-attr">qrcode:</span> <span class="hljs-string">&#x27;/img/favicon.png&#x27;</span> &#125;<br></code></pre></td></tr></table></figure><ul><li><code>class</code>: 图标的 <code>css class</code>，主题内置图标详见<a href="https://fluid-dev.github.io/hexo-fluid-docs/icon/">这里</a></li><li><code>link</code>: 跳转链接</li><li><code>tip</code>: 鼠标悬浮在图标上显示的提示文字</li><li><code>qrcode</code>: 二维码图片，当使用此字段后，点击不再跳转，而是悬浮二维码</li></ul><p>参考教程：</p><ol><li><a href="https://fluid-dev.github.io/hexo-fluid-docs/guide/">https://fluid-dev.github.io/hexo-fluid-docs/guide/</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>博客搭建</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>快速搭建hexo博客</title>
    <link href="/2023/09/23/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/09/23/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="1-前期准备"><a href="#1-前期准备" class="headerlink" title="1. 前期准备"></a>1. 前期准备</h1><h2 id="1-1-安装Node-js"><a href="#1-1-安装Node-js" class="headerlink" title="1.1 安装Node.js"></a>1.1 安装Node.js</h2><p>官网链接：<a href="https://nodejs.org/en">https://nodejs.org/en</a></p><p>安装教程：<a href="https://blog.csdn.net/WHF__/article/details/129362462?spm=1001.2014.3001.5506">Node.js下载安装及环境配置教程【超详细】_nodejs下载-CSDN博客</a></p><p>npm运行报错解决方案：<a href="https://blog.csdn.net/weixin_37861326/article/details/104295379?spm=1001.2014.3001.5506">npm 运行时报错“因为在此系统上禁止运行脚本”解决办法_npm : 无法加载文件 c:\program files\nodejs\npm.ps1,因为在此系__cris的博客-CSDN博客</a></p><h2 id="1-2-注册github账户"><a href="#1-2-注册github账户" class="headerlink" title="1.2 注册github账户"></a>1.2 注册github账户</h2><h2 id="1-3-安装hexo"><a href="#1-3-安装hexo" class="headerlink" title="1.3 安装hexo"></a>1.3 安装hexo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cnpm install -g hexo-cli<br></code></pre></td></tr></table></figure><h1 id="2-快速搭建"><a href="#2-快速搭建" class="headerlink" title="2. 快速搭建"></a>2. 快速搭建</h1><h2 id="2-1-创建根目录"><a href="#2-1-创建根目录" class="headerlink" title="2.1 创建根目录"></a>2.1 创建根目录</h2><p>本地创建一个文件夹，作为博客部署的空间，后续操作均基于该根目录</p><h2 id="2-2-初始化"><a href="#2-2-初始化" class="headerlink" title="2.2 初始化"></a>2.2 初始化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init<br></code></pre></td></tr></table></figure><h2 id="2-3-启动本地服务"><a href="#2-3-启动本地服务" class="headerlink" title="2.3 启动本地服务"></a>2.3 启动本地服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo s<br></code></pre></td></tr></table></figure><h2 id="2-4-新建文章"><a href="#2-4-新建文章" class="headerlink" title="2.4 新建文章"></a>2.4 新建文章</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo n <span class="hljs-string">&quot;My first blog&quot;</span><br></code></pre></td></tr></table></figure><h2 id="2-5-清理缓存"><a href="#2-5-清理缓存" class="headerlink" title="2.5 清理缓存"></a>2.5 清理缓存</h2><p>注：每次无论 <code>hexo g</code> 或 <code>hexo s</code>，都最好先使用 <code>hexo clean</code> 清除本地缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br></code></pre></td></tr></table></figure><h2 id="2-6-生成静态文件"><a href="#2-6-生成静态文件" class="headerlink" title="2.6 生成静态文件"></a>2.6 生成静态文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br></code></pre></td></tr></table></figure><h1 id="3-部署到github"><a href="#3-部署到github" class="headerlink" title="3. 部署到github"></a>3. 部署到github</h1><h2 id="3-1-新建仓库"><a href="#3-1-新建仓库" class="headerlink" title="3.1 新建仓库"></a>3.1 新建仓库</h2><p>注：命名格式为固定要求</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">账户名<span class="hljs-selector-class">.github</span><span class="hljs-selector-class">.io</span>(例：kaikaikai7<span class="hljs-selector-class">.github</span>.io)<br></code></pre></td></tr></table></figure><h2 id="3-2-安装插件"><a href="#3-2-安装插件" class="headerlink" title="3.2 安装插件"></a>3.2 安装插件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cnpm install --save hexo-deployer-git<br></code></pre></td></tr></table></figure><h2 id="3-3-修改配置文件"><a href="#3-3-修改配置文件" class="headerlink" title="3.3 修改配置文件"></a>3.3 修改配置文件</h2><ol><li><p>进入根目录下_config.yml文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim _config.yml<br></code></pre></td></tr></table></figure></li><li><p>修改Deployment部分内容</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://github.com/kaikaikai7/kaikaikai7.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure></li></ol><h2 id="3-4-部署"><a href="#3-4-部署" class="headerlink" title="3.4 部署"></a>3.4 部署</h2><p>注：页面结果以本地 <code>hexo s</code> 为准，部署后的异常大部分是线上缓存原因，在确认没有报错的情况下，等待若干时间后即可正常</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo d<br></code></pre></td></tr></table></figure><h2 id="3-5-访问"><a href="#3-5-访问" class="headerlink" title="3.5 访问"></a>3.5 访问</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>账户名.github.io/<br>（例：https:<span class="hljs-regexp">//</span>kaikaikai7.github.io/）<br></code></pre></td></tr></table></figure><h1 id="4-更换主题"><a href="#4-更换主题" class="headerlink" title="4. 更换主题"></a>4. 更换主题</h1><h2 id="4-1-主题官网"><a href="#4-1-主题官网" class="headerlink" title="4.1 主题官网"></a>4.1 主题官网</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>hexo.io<span class="hljs-regexp">/themes/</span><br></code></pre></td></tr></table></figure><h2 id="4-2-下载主题"><a href="#4-2-下载主题" class="headerlink" title="4.2 下载主题"></a>4.2 下载主题</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> 主题地址.git themes/目录<br>（例：git <span class="hljs-built_in">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia）<br></code></pre></td></tr></table></figure><h2 id="4-3-修改配置文件"><a href="#4-3-修改配置文件" class="headerlink" title="4.3 修改配置文件"></a>4.3 修改配置文件</h2><ol><li><p>进入根目录下_config.yml文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim _config.yml<br></code></pre></td></tr></table></figure></li><li><p>修改Extensions部分内容</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Extensions</span><br><span class="hljs-comment">## Plugins: https://hexo.io/plugins/</span><br><span class="hljs-comment">## Themes: https://hexo.io/themes/</span><br><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span><br></code></pre></td></tr></table></figure></li></ol><p>参考教程：</p><ol><li><a href="https://www.bilibili.com/video/BV1Yb411a7ty/">https://www.bilibili.com/video/BV1Yb411a7ty/</a></li><li><a href="https://cnhuazhu.top/butterfly/2021/01/21/Hexo%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/">Hexo快速搭建一个博客 | 花猪のBlog (cnhuazhu.top)</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>博客搭建</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
